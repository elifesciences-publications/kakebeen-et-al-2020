xlab("") + # remove xaxis title
stat_compare_means(comparisons = comparisons, method = "t.test", label.y = c(750, 825, 900, 970), label = "p.signif") + # add statistical test
Seurat:::RotatedAxis() + # rotate xaxis names
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor)) # call fill colors
TailS_72hpa <- filter(TailS, Timepoint == "72hpa")
TailS_72hpa
# plot all timepoints
ggplot(TailS_72hpa, aes(x=SampleID, y=Measurement, fill=SampleID)) + # define dataframe and paramters
geom_boxplot() + # make boxplot
geom_jitter() + # add points on top of boxplots
theme_bw(base_size = 20) + # adjust text size
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + # adjust graph look (remove gridlines)
facet_grid(Timepoint~MeasureType) + # divide graph by timepoint and measurement type
ylim(0, 1000) + # define axis limit
ylab(expression(paste("Length ", mu, "m"))) + # label y axis
xlab("") + # remove xaxis title
stat_compare_means(comparisons = comparisons, method = "t.test", label.y = c(750, 825, 900, 970), label = "p.signif") + # add statistical test
Seurat:::RotatedAxis() + # rotate xaxis names
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor)) # call fill colors
# filter data for last clutch with correct doses
vmo_022120 <- filter(MOdata, Clutch == "22120")
#factor data to order sample variables correctly
vmo_022120$SampleID <- factor(vmo_022120$SampleID, levels = c("uninjected", "tracer", "meis1_VMO", "pbx3_VMO"))
# define comparisons for statistics
comparisons <- list(c("uninjected", "tracer"),c("uninjected", "meis1_VMO"),c("uninjected", "pbx3_VMO"),c("tracer", "meis1_VMO"), c("tracer", "pbx3_VMO")) # define comparisons for statistics
# for publication
ggplot(vmo_022120, aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_boxplot() +
geom_jitter() +
theme_bw(base_size = 20) +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black")) +
facet_grid(Timepoint~MeasureType) +
ylab(expression(paste("Length ", mu, "m"))) +
xlab("") +
stat_compare_means(comparisons = comparisons, method = "t.test", label = "p.signif") +
Seurat:::RotatedAxis() +
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor))
# for talk figure
ggplot(vmo_022120, aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_boxplot() +
geom_jitter() +
theme_dark(base_size = 20) +
ylab(label = expression(paste("Length ", mu, "m"))) +
xlab("") +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "white"), axis.text.y = element_text(colour = "white"), axis.title.y = element_text(colour = "white"), plot.background = element_rect(fill = "black")) +
facet_grid(MeasureType~Timepoint) +
stat_compare_means(comparisons = comparisons, method = "t.test", label = "p.signif") +
Seurat:::RotatedAxis() +
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor))
# for publication
ggplot(vmo_022120, aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_boxplot() +
geom_jitter() +
theme_bw(base_size = 20) +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black")) +
facet_grid(.~MeasureType) +
ylab(expression(paste("Length ", mu, "m"))) +
xlab("") +
stat_compare_means(comparisons = comparisons, method = "t.test", label = "p.signif") +
Seurat:::RotatedAxis() +
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor))
# for publication
p1 <- ggplot(subset(vmo_022120, MeasureType == "Tail"), aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_boxplot() +
geom_jitter() +
theme_bw(base_size = 20) +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black")) +
ylab(expression(paste("Length ", mu, "m"))) +
xlab("") +
stat_compare_means(comparisons = comparisons, method = "t.test", label = "p.signif") +
Seurat:::RotatedAxis() +
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor))
p1
# for publication
p1 <- ggplot(subset(vmo_022120, MeasureType == "Tail"), aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_boxplot() +
geom_jitter() +
theme_bw(base_size = 20) +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black")) +
ylab(expression(paste("Length ", mu, "m"))) +
xlab("") +
ggtitle("Tail Length") +
stat_compare_means(comparisons = comparisons, method = "t.test", label = "p.signif") +
Seurat:::RotatedAxis() +
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor))
p2 <- ggplot(subset(vmo_022120, MeasureType == "Spinal Cord"), aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_boxplot() +
geom_jitter() +
theme_bw(base_size = 20) +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black")) +
ylab(expression(paste("Length ", mu, "m"))) +
xlab("") +
ggtitle("Spinal Cord Length") +
stat_compare_means(comparisons = comparisons, method = "t.test", label = "p.signif") +
Seurat:::RotatedAxis() +
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor))
# https://patchwork.data-imaginist.com/
library(patchwork)
library(patchwork)
p1|p2
# for publication
p1 <- ggplot(vmo_022120, aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_boxplot() +
geom_jitter() +
theme_bw(base_size = 20) +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black")) +
ylab(expression(paste("Length ", mu, "m"))) +
xlab("") +
facet_grid(MeasureType~.)
# for publication
p1 <- ggplot(vmo_022120, aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_boxplot() +
geom_jitter() +
theme_bw(base_size = 20) +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black")) +
ylab(expression(paste("Length ", mu, "m"))) +
xlab("") +
facet_grid(MeasureType~.)+
stat_compare_means(comparisons = comparisons, method = "t.test", label = "p.signif") +
Seurat:::RotatedAxis() +
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor))
# for publication
ggplot(vmo_022120, aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_boxplot() +
geom_jitter() +
theme_bw(base_size = 20) +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black")) +
ylab(expression(paste("Length ", mu, "m"))) +
xlab("") +
facet_grid(MeasureType~.)+
stat_compare_means(comparisons = comparisons, method = "t.test", label = "p.signif") +
Seurat:::RotatedAxis() +
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor))
# for publication
ggplot(vmo_022120, aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_boxplot() +
geom_jitter() +
theme_bw(base_size = 20) +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black")) +
ylab(expression(paste("Length ", mu, "m"))) +
xlab("") +
facet_grid(.~MeasureType)+
stat_compare_means(comparisons = comparisons, method = "t.test", label = "p.signif") +
Seurat:::RotatedAxis() +
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor))
# for publication
ggplot(vmo_022120, aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_boxplot() +
geom_jitter() +
theme_bw(base_size = 20) +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black")) +
ylab(expression(paste("Length ", mu, "m"))) +
xlab("") +
facet_grid(MeasureType)+
stat_compare_means(comparisons = comparisons, method = "t.test", label = "p.signif") +
Seurat:::RotatedAxis() +
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor))
# for publication
ggplot(vmo_022120, aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_boxplot() +
geom_jitter() +
theme_bw(base_size = 20) +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black")) +
ylab(expression(paste("Length ", mu, "m"))) +
xlab("") +
facet_wrap(MeasureType)+
stat_compare_means(comparisons = comparisons, method = "t.test", label = "p.signif") +
Seurat:::RotatedAxis() +
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor))
# for publication
ggplot(vmo_022120, aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_boxplot() +
geom_jitter() +
theme_bw(base_size = 20) +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black")) +
ylab(expression(paste("Length ", mu, "m"))) +
xlab("") +
facet_wrap("MeasureType")+
stat_compare_means(comparisons = comparisons, method = "t.test", label = "p.signif") +
Seurat:::RotatedAxis() +
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor))
# set wd
setwd("~/Desktop/pax6 paper/Final Markdowns/TailMeasurement/")
# load packages
library(ggplot2)
library(tidyr)
library(DT)
library(LaCroixColoR)
library(dplyr)
library(ggpubr)
library(cowplot)
library(Seurat)
library(patchwork)
# read in data
MOdata <- read.csv("pbx3_meis1MO_regenmeasures_021220.csv")
MOdata$SampleFull <- paste(MOdata$Sample, MOdata$Timepoint, MOdata$Replicate, MOdata$Clutch, sep = ".") # make column with sampleID
MOdata$Clutch <- as.character(MOdata$Clutch) # set numerical values of clutch as a character
# rename sc to spinal cord
MOdata$MeasureType <- (gsub(MOdata$MeasureType, pattern = "sc", replacement = "Spinal Cord"))
MOdata$MeasureType <- factor(MOdata$MeasureType, levels = c("Tail", "Spinal Cord", "Spinal Cord_width")) # factor measurement type for plot
datatable(MOdata)
# filter data for last clutch with correct doses
vmo_022120 <- filter(MOdata, Clutch == "22120")
vmo_022120
datatable(MOdata)
datatable(vmo_022120)
# rename sc to spinal cord
MOdata$MeasureType <- (gsub(MOdata$MeasureType, pattern = "sc", replacement = "Spinal Cord"))
MOdata$MeasureType <- factor(MOdata$MeasureType, levels = c("Tail", "Spinal Cord", "Spinal Cord_width")) # factor measurement type for plot
# view data
datatable(MOdata)
# boxplot to compare measurement data across cntrl, meis1MO, and pbx3 MO
TailS <- filter(MOdata, MeasureType %in% c("Tail", "Spinal Cord")) # filter table for only tail and spinal cord measurements
# plot all timepoints
ggplot(TailS, aes(x=SampleID, y=Measurement, fill=SampleID)) + # define dataframe and paramters
geom_boxplot() + # make boxplot
geom_jitter() + # add points on top of boxplots
theme_bw(base_size = 20) + # adjust text size
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + # adjust graph look (remove gridlines)
facet_grid(Timepoint~MeasureType) + # divide graph by timepoint and measurement type
ylim(0, 1000) + # define axis limit
ylab(expression(paste("Length ", mu, "m"))) + # label y axis
xlab("") + # remove xaxis title
stat_compare_means(comparisons = comparisons, method = "t.test", label.y = c(750, 825, 900, 970), label = "p.signif") + # add statistical test
Seurat:::RotatedAxis() + # rotate xaxis names
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor)) # call fill colors
# colors
meisColor <- "#FBB58F"
pbxColor <- "#B574A7"
color <- lacroix_palette("CranRaspberry")
# plot all timepoints
ggplot(TailS, aes(x=SampleID, y=Measurement, fill=SampleID)) + # define dataframe and paramters
geom_boxplot() + # make boxplot
geom_jitter() + # add points on top of boxplots
theme_bw(base_size = 20) + # adjust text size
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + # adjust graph look (remove gridlines)
facet_grid(Timepoint~MeasureType) + # divide graph by timepoint and measurement type
ylim(0, 1000) + # define axis limit
ylab(expression(paste("Length ", mu, "m"))) + # label y axis
xlab("") + # remove xaxis title
stat_compare_means(comparisons = comparisons, method = "t.test", label.y = c(750, 825, 900, 970), label = "p.signif") + # add statistical test
Seurat:::RotatedAxis() + # rotate xaxis names
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor)) # call fill colors
# plot 72hpa
ggplot(filter(TailS, Timepoint == "72hpa"), aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_boxplot() +
geom_jitter() +
theme_bw(base_size = 20) +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black")) +
facet_grid(Timepoint~MeasureType) +
ylim(0, 1000) +
ylab(expression(paste("Length ", mu, "m"))) +
xlab("") +
stat_compare_means(comparisons = comparisons, method = "t.test", label.y = c(750, 825, 900, 975), label = "p.signif") +
Seurat:::RotatedAxis() +
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor))
comparisons <- list(c("cntrl", "meis1MO1"),c("cntrl", "meis1MO2"),c("cntrl", "pbx3MO1"),c("cntrl", "pbx3MO2")) # define comparisons for statistics
# plot 72hpa
ggplot(filter(TailS, Timepoint == "72hpa"), aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_boxplot() +
geom_jitter() +
theme_bw(base_size = 20) +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black")) +
facet_grid(Timepoint~MeasureType) +
ylim(0, 1000) +
ylab(expression(paste("Length ", mu, "m"))) +
xlab("") +
stat_compare_means(comparisons = comparisons, method = "t.test", label.y = c(750, 825, 900, 975), label = "p.signif") +
Seurat:::RotatedAxis() +
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor))
# colors
meisColor <- "#FBB58F"
pbxColor <- "#B574A7"
color <- lacroix_palette("CranRaspberry")
# source functions
source("~/Desktop/R_working/common_source_functions.R")
# read in data
MOdata <- read.csv("pbx3_meis1MO_regenmeasures_021220.csv")
MOdata$SampleFull <- paste(MOdata$Sample, MOdata$Timepoint, MOdata$Replicate, MOdata$Clutch, sep = ".") # make column with sampleID
MOdata$Clutch <- as.character(MOdata$Clutch) # set numerical values of clutch as a character
# rename sc to spinal cord
MOdata$MeasureType <- (gsub(MOdata$MeasureType, pattern = "sc", replacement = "Spinal Cord"))
MOdata$MeasureType <- factor(MOdata$MeasureType, levels = c("Tail", "Spinal Cord", "Spinal Cord_width")) # factor measurement type for plot
# view data
datatable(MOdata)
# Get data for embryonic morphants
TailS <- MOdata %>%
filter(Other.Notes == "embryonic study") %>%
filter(MeasureType %in% c("Tail", "Spinal Cord")) # filter table for only tail and spinal cord measurements
comparisons <- list(c("cntrl", "meis1MO1"),c("cntrl", "meis1MO2"),c("cntrl", "pbx3MO1"),c("cntrl", "pbx3MO2")) # define comparisons for statistics
# plot all timepoints
ggplot(TailS, aes(x=SampleID, y=Measurement, fill=SampleID)) + # define dataframe and paramters
geom_boxplot() + # make boxplot
geom_jitter() + # add points on top of boxplots
theme_bw(base_size = 20) + # adjust text size
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + # adjust graph look (remove gridlines)
facet_grid(Timepoint~MeasureType) + # divide graph by timepoint and measurement type
ylim(0, 1000) + # define axis limit
ylab(expression(paste("Length ", mu, "m"))) + # label y axis
xlab("") + # remove xaxis title
stat_compare_means(comparisons = comparisons, method = "t.test", label.y = c(750, 825, 900, 970), label = "p.signif") + # add statistical test
Seurat:::RotatedAxis() + # rotate xaxis names
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor)) # call fill colors
write.csv(TailS, "embryonic_morphant_tail_measurements.csv")
# plot 72hpa
ggplot(filter(TailS, Timepoint == "72hpa"), aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_boxplot() +
geom_jitter() +
theme_bw(base_size = 20) +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black")) +
facet_grid(Timepoint~MeasureType) +
ylim(0, 1000) +
ylab(expression(paste("Length ", mu, "m"))) +
xlab("") +
stat_compare_means(comparisons = comparisons, method = "t.test", label.y = c(750, 825, 900, 975), label = "p.signif") +
Seurat:::RotatedAxis() +
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor))
# filter data for last clutch with correct doses
vmo_022120 <- MOdata %>%
filter(Clutch == "22120" ) %>%
filter(SampleID %in% c("tracer", "pbx3_VMO", "meis1_VMO"))
#factor data to order sample variables correctly
vmo_022120$SampleID <- factor(vmo_022120$SampleID, levels = c("tracer", "meis1_VMO", "pbx3_VMO"))
# define comparisons for statistics
comparisons <- list(c("tracer", "meis1_VMO"), c("tracer", "pbx3_VMO")) # define comparisons for statistics
# for publication
ggplot(vmo_022120, aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_boxplot() +
theme_bw(base_size = 29) +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black"), strip.background =element_rect(fill="white")) +
facet_grid(Timepoint~MeasureType) +
ylab(expression(paste("Length ", mu, "m"))) +
xlab("") +
stat_compare_means(comparisons = comparisons, method = "t.test", label = "p.signif") +
Seurat:::RotatedAxis() +
scale_fill_manual(values = c(tracerColor, meisColor, pbxColor))
# colors
uninjColor <- "white"
tracerColor <- "#D9565C"
meisColor <- "#FBB58F"
pbxColor <- "#B574A7"
color <- lacroix_palette("CranRaspberry")
# for publication
ggplot(vmo_022120, aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_boxplot() +
theme_bw(base_size = 29) +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black"), strip.background =element_rect(fill="white")) +
facet_grid(Timepoint~MeasureType) +
ylab(expression(paste("Length ", mu, "m"))) +
xlab("") +
stat_compare_means(comparisons = comparisons, method = "t.test", label = "p.signif") +
Seurat:::RotatedAxis() +
scale_fill_manual(values = c(tracerColor, meisColor, pbxColor))
table(vmo_022120$SampleID, vmo_022120$MeasureType)
table(TailS$SampleID, vmo_022120$MeasureType)
table(TailS$SampleID, TailS$MeasureType)
# plot 72hpa
ggplot(filter(TailS, Timepoint == "72hpa"), aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_boxplot() +
geom_jitter() +
theme_bw(base_size = 20) +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black")) +
facet_grid(Timepoint~MeasureType) +
ylim(0, 1000) +
ylab(expression(paste("Length ", mu, "m"))) +
xlab("") +
stat_compare_means(comparisons = comparisons, method = "t.test", label.y = c(750, 825, 900, 975), label = "p.signif") +
Seurat:::RotatedAxis() +
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor))
# plot 72hpa
ggplot(filter(TailS, Timepoint == "72hpa"), aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_boxplot() +
geom_jitter() +
theme_bw(base_size = 20) +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black")) +
facet_grid(Timepoint~MeasureType) +
ylim(0, 1000) +
ylab(expression(paste("Length ", mu, "m"))) +
xlab("") +
stat_compare_means(comparisons = comparisons, method = "t.test", label.y = c(750, 825, 900, 975), label = "p.signif") +
Seurat:::RotatedAxis() +
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor))
# define comparisons for statistics
comparisons <- list(c("cntrl", "meis1MO1"),c("cntrl", "meis1MO2"),c("cntrl", "pbx3MO1"),c("cntrl", "pbx3MO2"))
# plot 72hpa
ggplot(filter(TailS, Timepoint == "72hpa"), aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_boxplot() +
geom_jitter() +
theme_bw(base_size = 20) +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black")) +
facet_grid(Timepoint~MeasureType) +
ylim(0, 1000) +
ylab(expression(paste("Length ", mu, "m"))) +
xlab("") +
stat_compare_means(comparisons = comparisons, method = "t.test", label.y = c(750, 825, 900, 975), label = "p.signif") +
Seurat:::RotatedAxis() +
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor))
TailS
table(TailS$SampleID, TailS$MeasureType, TailS$Timepoint)
TailS_72 <- filter(TailS, Timepoint == "72hpa")
table(TailS_72$SampleID, TailS_72$MeasureType)
# number of animals for each condition
table(vmo_022120$SampleID, vmo_022120$MeasureType)
write.csv(vmo_022120, "vivo_morphant_tail_measurements.csv")
vmo_022120
# set wd
setwd("~/Desktop/pax6 paper/Final Markdowns/RegenPH3/")
# read in data
ph3 <- read.csv("regen_ph3.csv")
ph3_2472 <- filter(ph3, Clutch == "20720")
# plot ph3/area of spinal cord FOR FIGURES
ggplot(ph3_2472, aes(x=Timepoint, y=CPMm)) +
geom_boxplot(fill="green4") +
ylab(expression("pH3 Cells per"~mm^2~" of the Spinal Cord")) +
theme_bw() +
theme(text = element_text(colour = "black", size = 29), axis.text.x = element_text(color="black"), axis.text.y = element_text(color="black")) +
stat_compare_means(comparisons = list(c("24hpa", "72hpa")), method = "t.test")
#filter for morphant data
ph3_2472_1 <- filter(ph3, Condition == "uninjured")
# plot morphant data
ggplot(ph3_2472_1, aes(x=Timepoint, y=CPMm)) +
geom_boxplot(fill="green4") +
ylab(expression("pH3 Cells per"~mm^2~" of the Spinal Cord")) +
theme_bw() +
theme(text = element_text(colour = "black", size = 18), axis.text.x = element_text(color="black"), axis.text.y = element_text(color="black")) +
stat_compare_means(comparisons = list(c("24hpa", "72hpa")), method = "t.test") +
facet_wrap(Condition~.) +
Seurat:::RotatedAxis()
table(ph3_2472_1$Timepoint)
table(ph3_2472$Timepoint)
# save source file
write.csv(ph3_2472, "ph3_24hpa_72hpa.csv")
#filter for morphant data
ph3_morphant <- filter(ph3, Clutch == "22120")
# source for morphant data
write.csv(ph3_morphant, "ph3_morphant.csv")
# plot ph3/area of spinal cord FOR FIGURES
ggplot(ph3_2472, aes(x=Timepoint, y=CPMm)) +
geom_boxplot(fill="green4") +
ylab(expression("pH3 Cells per"~mm^2~" of the Spinal Cord")) +
theme_bw() +
theme(text = element_text(colour = "black", size = 29), axis.text.x = element_text(color="black"), axis.text.y = element_text(color="black")) +
stat_compare_means(comparisons = list(c("24hpa", "72hpa")), method = "t.test")
table(ph3_2472$Timepoint)
# set stats covmparison
comparison <- list(c("uninjured", "tracer"), c("uninjured", "pbx3_VMO"), c("uninjured", "meis1_VMO"), c("tracer", "pbx3_VMO"), c("tracer", "meis1_VMO"))
# plot morphant data per each timepoint comparing between conditions
ggplot(ph3_morphant, aes(x=Condition, y=ph3_morphant$CPMm)) +
geom_boxplot(fill="green4") +
ylab(expression("PH3+ Cells per"~mm^2~" of the Spinal Cord")) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), text = element_text(colour = "black", size = 20), axis.text.x = element_text(color="black"), axis.text.y = element_text(color="black")) +
stat_compare_means(comparisons = comparison, method = "t.test", label = "p.signif") +
facet_grid(Timepoint~.) +
Seurat:::RotatedAxis()
# plot morphant data per each condition comparing timepoints
ggplot(ph3_morphant, aes(x=Timepoint, y=ph3_morphant$CPMm)) +
geom_boxplot(fill="green4") +
ylab(expression("PH3+ Cells per"~mm^2~" of the Spinal Cord")) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), text = element_text(colour = "black", size = 18), axis.text.x = element_text(color="black"), axis.text.y = element_text(color="black")) +
stat_compare_means(comparisons = list(c("24hpa", "72hpa")), method = "t.test", label = "p.signif") +
facet_wrap(Condition~.) +
Seurat:::RotatedAxis()
# Factor conditions for plotting
ph3_morphant$Condition <- factor(ph3_morphant$Condition, levels = c("tracer", "meis1_VMO", "pbx3_VMO"))
# set stats covmparison
comparison <- list(c("tracer", "pbx3_VMO"), c("tracer", "meis1_VMO"))
# plot morphant data per each timepoint comparing between conditions
ggplot(subset(ph3_morphant, Timepoint == "72hpa" & Condition %in% c("tracer", "meis1_VMO", "pbx3_VMO")), aes(x=Condition, y=(Area_micron/1000))) +
geom_boxplot(fill="green4") +
ylab(expression("Area of Spinal Cord"~paste(mm^2))) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), text = element_text(colour = "black", size = 29), axis.text.x = element_text(color="black"), axis.text.y = element_text(color="black")) +
stat_compare_means(comparisons = comparison, method = "t.test", label = "p.signif") +
xlab("") +
Seurat:::RotatedAxis()
ggplot(subset(ph3_morphant, Timepoint == "72hpa"& Condition %in% c("tracer", "meis1_VMO", "pbx3_VMO")), aes(x=Condition, y=CPMm)) +
geom_boxplot(fill="green4") +
ylab(expression("PH3 Cells/"~mm^2~"Spinal Cord")) +
theme_bw() +
xlab("") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), text = element_text(colour = "black", size = 29), axis.text.x = element_text(color="black"), axis.text.y = element_text(color="black")) +
stat_compare_means(comparisons = comparison, method = "t.test", label = "p.signif") +
Seurat:::RotatedAxis()
# plot morphant data per each timepoint comparing between conditions
ggplot(subset(ph3_morphant, Timepoint == "72hpa" & Condition %in% c("tracer", "meis1_VMO", "pbx3_VMO")), aes(x=Condition, y=(Area_micron/1000))) +
geom_boxplot(fill="green4") +
ylab(expression("Area of Spinal Cord"~paste(mm^2))) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), text = element_text(colour = "black", size = 29), axis.text.x = element_text(color="black"), axis.text.y = element_text(color="black")) +
stat_compare_means(comparisons = comparison, method = "t.test", label = "p.signif") +
xlab("") +
Seurat:::RotatedAxis()
ggplot(subset(ph3_morphant, Timepoint == "72hpa"& Condition %in% c("tracer", "meis1_VMO", "pbx3_VMO")), aes(x=Condition, y=CPMm)) +
geom_boxplot(fill="green4") +
ylab(expression("PH3 Cells/"~mm^2~"Spinal Cord")) +
theme_bw() +
xlab("") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), text = element_text(colour = "black", size = 29), axis.text.x = element_text(color="black"), axis.text.y = element_text(color="black")) +
stat_compare_means(comparisons = comparison, method = "t.test", label = "p.signif") +
Seurat:::RotatedAxis()
table(ph3_morphant$Condition, ph3_morphant$Timepoint)
test <- read.csv("axon_intensity.csv")
test$condition <- factor(test$condition, levels=c("mr", "pbx3", 'meis1'))
test %>%
group_by(condition) %>%
summarise(mean_int = mean(intden), mean_raw = mean(rawintden), mean_area = mean(area))
ggplot(test, aes(x=condition, y=intden)) +
geom_boxplot() +
geom_jitter() +
stat_compare_means(comparisons = list(c("mr", "pbx3"), c("mr", "meis1")))
