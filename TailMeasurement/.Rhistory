ggplot(vmo_022120, aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_boxplot() +
geom_jitter() +
theme_dark(base_size = 20) +
ylab(label = expression(paste("Length ", mu, "m"))) +
xlab("") +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "white"), axis.text.y = element_text(colour = "white"), axis.title.y = element_text(colour = "white"), plot.background = element_rect(fill = "black")) +
facet_grid(MeasureType~.) +
stat_compare_means(comparisons = comparisons, method = "t.test", label = "p.signif") +
Seurat:::RotatedAxis() +
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor))
# for talk figure
ggplot(vmo_022120, aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_boxplot() +
geom_jitter() +
theme_dark(base_size = 20) +
ylab(label = expression(paste("Length ", mu, "m"))) +
xlab("") +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "white"), axis.text.y = element_text(colour = "white"), axis.title.y = element_text(colour = "white"), plot.background = element_rect(fill = "black")) +
facet_grid(MeasureType~Timepoint) +
stat_compare_means(comparisons = comparisons, method = "t.test", label = "p.signif") +
Seurat:::RotatedAxis() +
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor))
# for talk figure
ggplot(vmo_022120, aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_boxplot() +
geom_jitter() +
theme_dark(base_size = 20) +
ylab(label = expression(paste("Length ", mu, "m"))) +
xlab("") +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "white"), axis.text.y = element_text(colour = "white"), axis.title.y = element_text(colour = "white"), plot.background = element_rect(fill = "black")) +
facet_grid(MeasureType~Timepoint) +
stat_compare_means(comparisons = comparisons, method = "t.test", label = "p.signif") +
Seurat:::RotatedAxis() +
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor)) +
coord_flip()
# for talk figure
ggplot(vmo_022120, aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_boxplot() +
geom_jitter() +
theme_dark(base_size = 20) +
ylab(label = expression(paste("Length ", mu, "m"))) +
xlab("") +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "white"), axis.text.y = element_text(colour = "white"), axis.title.y = element_text(colour = "white"), plot.background = element_rect(fill = "black")) +
facet_grid(Timepoint~MeasureType) +
stat_compare_means(comparisons = comparisons, method = "t.test", label = "p.signif") +
Seurat:::RotatedAxis() +
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor)) +
coord_flip()
# for talk figure
ggplot(vmo_022120, aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_violin() +
geom_jitter() +
theme_dark(base_size = 20) +
ylab(label = expression(paste("Length ", mu, "m"))) +
xlab("") +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "white"), axis.text.y = element_text(colour = "white"), axis.title.y = element_text(colour = "white"), plot.background = element_rect(fill = "black")) +
facet_grid(Timepoint~MeasureType) +
stat_compare_means(comparisons = comparisons, method = "t.test", label = "p.signif") +
Seurat:::RotatedAxis() +
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor)) +
coord_flip()
# for talk figure
ggplot(vmo_022120, aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_boxplot() +
geom_jitter() +
theme_dark(base_size = 20) +
ylab(label = expression(paste("Length ", mu, "m"))) +
xlab("") +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "white"), axis.text.y = element_text(colour = "white"), axis.title.y = element_text(colour = "white"), plot.background = element_rect(fill = "black")) +
facet_grid(MeasureType~Timepoint) +
stat_compare_means(comparisons = comparisons, method = "t.test", label = "p.signif") +
Seurat:::RotatedAxis() +
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor))
# for publication
ggplot(vmo_022120, aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_boxplot() +
geom_jitter() +
theme_bw(base_size = 20) +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black")) +
facet_grid(Timepoint~MeasureType) +
ylab(expression(paste("Length ", mu, "m"))) +
xlab("") +
stat_compare_means(comparisons = comparisons, method = "t.test", label = "p.signif") +
Seurat:::RotatedAxis() +
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor))
# plot ph3/area of spinal cord
ggplot(ph3, aes(x=Timepoint, y=CPMm)) +
geom_boxplot(fill="green4", color="white") +
theme_bw() +
ylab("Cells Per mm") +
theme(text = element_text(colour = "white")) +
stat_compare_means(comparisons = list(c("24hpa", "72hpa")), method = "t.test", label = "p.signif", color = "white")
# plot ph3/area of spinal cord
ggplot(ph3, aes(x=Timepoint, y=CPMm)) +
geom_boxplot(fill="green4", color="white") +
ylab("Cells Per mm") +
theme(text = element_text(colour = "white")) +
stat_compare_means(comparisons = list(c("24hpa", "72hpa")), method = "t.test", label = "p.signif", color = "white")
# plot ph3/area of spinal cord
ggplot(ph3, aes(x=Timepoint, y=CPMm)) +
geom_boxplot(fill="green4", color="white") +
DarkTheme() +
ylab("Cells Per mm") +
theme(text = element_text(colour = "white")) +
stat_compare_means(comparisons = list(c("24hpa", "72hpa")), method = "t.test", label = "p.signif", color = "white")
# plot ph3/area of spinal cord
ggplot(ph3, aes(x=Timepoint, y=CPMm)) +
geom_boxplot(fill="green4") +
ylab("Cells Per mm") +
theme(text = element_text(colour = "black")) +
stat_compare_means(comparisons = list(c("24hpa", "72hpa")), method = "t.test", label = "p.signif", color = "white")
# plot ph3/area of spinal cord
ggplot(ph3, aes(x=Timepoint, y=CPMm)) +
geom_boxplot(fill="green4") +
ylab("Cells Per mm") +
theme_bw()
theme(text = element_text(colour = "black", size = 15)) +
stat_compare_means(comparisons = list(c("24hpa", "72hpa")), method = "t.test", label = "p.signif", color = "white")
# plot ph3/area of spinal cord
ggplot(ph3, aes(x=Timepoint, y=CPMm)) +
geom_boxplot(fill="green4") +
ylab("Cells Per mm") +
theme_bw() +
theme(text = element_text(colour = "black", size = 15)) +
stat_compare_means(comparisons = list(c("24hpa", "72hpa")), method = "t.test", label = "p.signif", color = "white")
# plot ph3/area of spinal cord
ggplot(ph3, aes(x=Timepoint, y=CPMm)) +
geom_boxplot(fill="green4") +
ylab("Cells Per mm") +
theme_bw() +
theme(text = element_text(colour = "black", size = 15), axis.text.x = element_text(color="black")) +
stat_compare_means(comparisons = list(c("24hpa", "72hpa")), method = "t.test", label = "p.signif", color = "white")
# plot ph3/area of spinal cord
ggplot(ph3, aes(x=Timepoint, y=CPMm)) +
geom_boxplot(fill="green4") +
ylab("Cells Per mm") +
theme_bw() +
theme(text = element_text(colour = "black", size = 15), axis.text.x = element_text(color="black")) +
stat_compare_means(comparisons = list(c("24hpa", "72hpa")), method = "t.test", label = "p.signif")
# plot ph3/area of spinal cord
ggplot(ph3, aes(x=Timepoint, y=CPMm)) +
geom_boxplot(fill="green4") +
ylab("Cells Per mm") +
theme_bw() +
theme(text = element_text(colour = "black", size = 18), axis.text.x = element_text(color="black")) +
stat_compare_means(comparisons = list(c("24hpa", "72hpa")), method = "t.test", label = "p.signif")
"Cells per ("mm^2")")))) +
theme_bw() +
theme(text = element_text(colour = "black", size = 18), axis.text.x = element_text(color="black")) +
stat_compare_means(comparisons = list(c("24hpa", "72hpa")), method = "t.test", label = "p.signif")
# plot ph3/area of spinal cord
ggplot(ph3, aes(x=Timepoint, y=CPMm)) +
geom_boxplot(fill="green4") +
ylab(expression(paste(
"Cells per ("mm^2")")))) +
theme_bw() +
theme(text = element_text(colour = "black", size = 18), axis.text.x = element_text(color="black")) +
stat_compare_means(comparisons = list(c("24hpa", "72hpa")), method = "t.test", label = "p.signif")
"Cells per ("mm^2")")) +
theme_bw() +
theme(text = element_text(colour = "black", size = 18), axis.text.x = element_text(color="black")) +
stat_compare_means(comparisons = list(c("24hpa", "72hpa")), method = "t.test", label = "p.signif")
expression(paste(
"Cells per ("mm^2")")
# plot ph3/area of spinal cord
ggplot(ph3, aes(x=Timepoint, y=CPMm)) +
geom_boxplot(fill="green4") +
ylab(expression(paste("Cells per", "mm^2"))) +
theme_bw() +
theme(text = element_text(colour = "black", size = 18), axis.text.x = element_text(color="black")) +
stat_compare_means(comparisons = list(c("24hpa", "72hpa")), method = "t.test", label = "p.signif")
# plot ph3/area of spinal cord
ggplot(ph3, aes(x=Timepoint, y=CPMm)) +
geom_boxplot(fill="green4") +
ylab(expression("Cells per"~mm^2)) +
theme_bw() +
theme(text = element_text(colour = "black", size = 18), axis.text.x = element_text(color="black")) +
stat_compare_means(comparisons = list(c("24hpa", "72hpa")), method = "t.test", label = "p.signif")
# plot ph3/area of spinal cord
ggplot(ph3, aes(x=Timepoint, y=CPMm)) +
geom_boxplot(fill="green4") +
ylab(expression("Cells per"~mm^2)~"Spinal Cord") +
theme_bw() +
theme(text = element_text(colour = "black", size = 18), axis.text.x = element_text(color="black")) +
stat_compare_means(comparisons = list(c("24hpa", "72hpa")), method = "t.test", label = "p.signif")
# plot ph3/area of spinal cord
ggplot(ph3, aes(x=Timepoint, y=CPMm)) +
geom_boxplot(fill="green4") +
ylab(expression("Cells per"~mm^2)~"Spinal Cord")) +
theme_bw() +
theme(text = element_text(colour = "black", size = 18), axis.text.x = element_text(color="black")) +
stat_compare_means(comparisons = list(c("24hpa", "72hpa")), method = "t.test", label = "p.signif")
ylab(expression("Cells per"~mm^2~"Spinal Cord") +
# plot ph3/area of spinal cord
ggplot(ph3, aes(x=Timepoint, y=CPMm)) +
# plot ph3/area of spinal cord
ggplot(ph3, aes(x=Timepoint, y=CPMm)) +
# plot ph3/area of spinal cord
ggplot(ph3, aes(x=Timepoint, y=CPMm)) +
geom_boxplot(fill="green4") +
ylab(expression("Cells per"~mm^2~"Spinal Cord")) +
theme_bw() +
theme(text = element_text(colour = "black", size = 18), axis.text.x = element_text(color="black")) +
stat_compare_means(comparisons = list(c("24hpa", "72hpa")), method = "t.test", label = "p.signif")
# plot ph3/area of spinal cord
ggplot(ph3, aes(x=Timepoint, y=CPMm)) +
geom_boxplot(fill="green4") +
ylab(expression("Cells per"~mm^2~"Spinal Cord")) +
theme_bw() +
theme(text = element_text(colour = "black", size = 18), axis.text.x = element_text(color="black")) +
stat_compare_means(comparisons = list(c("24hpa", "72hpa")), method = "t.test", label = "p.signif")
# plot ph3/area of spinal cord
ggplot(ph3, aes(x=Timepoint, y=CPMm)) +
geom_boxplot(fill="green4") +
ylab(expression("Cells per"~mm^2~" in the Spinal Cord")) +
theme_bw() +
theme(text = element_text(colour = "black", size = 18), axis.text.x = element_text(color="black")) +
stat_compare_means(comparisons = list(c("24hpa", "72hpa")), method = "t.test", label = "p.signif")
# plot ph3/area of spinal cord
ggplot(ph3, aes(x=Timepoint, y=CPMm)) +
geom_boxplot(fill="green4") +
ylab(expression("Cells per"~mm^2~" of the Spinal Cord")) +
theme_bw() +
theme(text = element_text(colour = "black", size = 18), axis.text.x = element_text(color="black")) +
stat_compare_means(comparisons = list(c("24hpa", "72hpa")), method = "t.test", label = "p.signif")
# plot ph3/area of spinal cord
ggplot(ph3, aes(x=Timepoint, y=CPMm)) +
geom_boxplot(fill="green4") +
ylab(expression("Cells per"~mm^2~" of the Spinal Cord")) +
theme_bw() +
theme(text = element_text(colour = "black", size = 18), axis.text.x = element_text(color="black"), axis.text.y = element_text(color="black")) +
stat_compare_means(comparisons = list(c("24hpa", "72hpa")), method = "t.test", label = "p.signif")
# plot ph3/area of spinal cord
ggplot(ph3, aes(x=Timepoint, y=CPMm)) +
geom_boxplot(fill="green4", color="white") +
DarkTheme() +
ylab(expression("Cells per"~mm^2~" of the Spinal Cord")) +
theme(text = element_text(colour = "white")) +
stat_compare_means(comparisons = list(c("24hpa", "72hpa")), method = "t.test", label = "p.signif", color = "white")
# Set working directory
setwd("~/Desktop/pax6 paper/Final Markdowns/FACS/")
# load libraries
library(DT)
library(ggplot2)
library(ggpubr)
library(dplyr)
library(tidyverse)
library(LaCroixColoR)
# source common functions
source("~/Desktop/R_working/common_source_functions.R")
# color
my.color <-(lacroix_palette("Lemon"))
# read in table of values
flow <- read.csv("pax6paper_analysis.csv") # read in data
flow <- flow[-c((grep(flow$Genotype, pattern = "gating")), 60),] # remove gating samples
# Subset out pax6 data
flow_pax <- subset(flow, Genotype == "pax") # subset
flow_pax$TimePoint <- factor(flow_pax$TimePoint, levels = c("uninj", "0hpa", "6hpa", "24hpa", "72hpa"))
datatable(flow)
# subset data for dates of interest
flow_pax_1 <- subset(flow_pax, flow_pax$date %in% c("2/6/19", "9/5/17", "9/6/17", "9/8/19"))  # subset data from pax table
flow_pax_1$cpt <- flow_pax_1$Count_GFPPos/as.numeric(flow_pax_1$tail) # add column for cells/tail input
table(flow_pax_1$TimePoint)  # show number of each timepoint present in data for information
datatable(flow_pax_1) # inspect data
# Define pairwise comparisons for statistical testing with ggpubr on the ggplot
comparisons <- list(c("uninj", "0hpa"),c("0hpa", "6hpa"), c("0hpa", "72hpa"), c("6hpa", "24hpa"), c("6hpa", "72hpa"), c("24hpa", "72hpa")) # list comparison for stats
# plot data in boxplot
ggplot(flow_pax_1, aes(x=TimePoint, y=cpt)) +
geom_boxplot(fill="#2CB11B") +
geom_jitter(color="black") +
stat_compare_means(comparisons = comparisons, method = "t.test") +
ggtitle("GFP+ Cells Per Tail Over Regeneration") +
theme(axis.title.x = element_text(size = 12), axis.title.y = element_text(size = 12), axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black")) +
ylab("Cells per Tail") +
xlab("Timepoint") +
theme_bw()
# plot ph3/area of spinal cord
ggplot(ph3, aes(x=Timepoint, y=CPMm)) +
geom_boxplot(fill="green4") +
ylab(expression("Cells per"~mm^2~" of the Spinal Cord")) +
theme_bw() +
theme(text = element_text(colour = "black", size = 18), axis.text.x = element_text(color="black"), axis.text.y = element_text(color="black")) +
stat_compare_means(comparisons = list(c("24hpa", "72hpa")), method = "t.test", label = "p.signif")
# plot ph3/area of spinal cord
ggplot(ph3, aes(x=Timepoint, y=CPMm)) +
geom_boxplot(fill="green4") +
ylab(expression("Cells per"~mm^2~" of the Spinal Cord")) +
theme_bw() +
theme(text = element_text(colour = "black", size = 18), axis.text.x = element_text(color="black"), axis.text.y = element_text(color="black")) +
stat_compare_means(comparisons = list(c("24hpa", "72hpa")), method = "t.test")
color <- lacroix_palette("CranRaspberry")
color
# set wd
setwd("~/Desktop/pax6 paper/Final Markdowns/TailMeasurement/")
# read in data
MOdata <- read.csv("pbx3_meis1MO_regenmeasures_021220.csv")
MOdata$SampleFull <- paste(MOdata$Sample, MOdata$Timepoint, MOdata$Replicate, MOdata$Clutch, sep = ".") # make column with sampleID
MOdata$Clutch <- as.character(MOdata$Clutch) # set numerical values of clutch as a character
# rename sc to spinal cord
MOdata$MeasureType <- (gsub(MOdata$MeasureType, pattern = "sc", replacement = "Spinal Cord"))
MOdata$MeasureType <- factor(MOdata$MeasureType, levels = c("Tail", "Spinal Cord", "Spinal Cord_width")) # factor measurement type for plot
# view data
datatable(MOdata)
# boxplot to compare measurement data across cntrl, meis1MO, and pbx3 MO
TailS <- filter(MOdata, MeasureType %in% c("Tail", "Spinal Cord")) # filter table for only tail and spinal cord measurements
TailS <- filter(TailS, TailS$SampleID %in% c("cntrl", "pbx3MO1", "pbx3MO2", "meis1MO2", "meis1MO1"))
comparisons <- list(c("cntrl", "meis1MO1"),c("cntrl", "meis1MO2"),c("cntrl", "pbx3MO1"),c("cntrl", "pbx3MO2")) # define comparisons for statistics
# plot all timepoints
ggplot(TailS, aes(x=SampleID, y=Measurement, fill=SampleID)) + # define dataframe and paramters
geom_boxplot() + # make boxplot
geom_jitter() + # add points on top of boxplots
theme_bw(base_size = 20) + # adjust text size
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + # adjust graph look (remove gridlines)
facet_grid(Timepoint~MeasureType) + # divide graph by timepoint and measurement type
ylim(0, 1000) + # define axis limit
ylab(expression(paste("Length ", mu, "m"))) + # label y axis
xlab("") + # remove xaxis title
stat_compare_means(comparisons = comparisons, method = "t.test", label.y = c(750, 825, 900, 970), label = "p.signif") + # add statistical test
Seurat:::RotatedAxis() + # rotate xaxis names
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor)) # call fill colors
datatable(TailS)
# plot all timepoints
ggplot(TailS, aes(x=SampleID, y=Measurement, fill=SampleID)) + # define dataframe and paramters
geom_boxplot() + # make boxplot
geom_jitter() + # add points on top of boxplots
theme_bw(base_size = 20) + # adjust text size
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + # adjust graph look (remove gridlines)
facet_grid(Timepoint~MeasureType) + # divide graph by timepoint and measurement type
ylim(0, 1000) + # define axis limit
ylab(expression(paste("Length ", mu, "m"))) + # label y axis
xlab("") + # remove xaxis title
stat_compare_means(comparisons = comparisons, method = "t.test", label.y = c(750, 825, 900, 970), label = "p.signif") + # add statistical test
Seurat:::RotatedAxis() + # rotate xaxis names
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor)) # call fill colors
TailS_72hpa <- filter(TailS, Timepoint == "72hpa")
TailS_72hpa
# plot all timepoints
ggplot(TailS_72hpa, aes(x=SampleID, y=Measurement, fill=SampleID)) + # define dataframe and paramters
geom_boxplot() + # make boxplot
geom_jitter() + # add points on top of boxplots
theme_bw(base_size = 20) + # adjust text size
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + # adjust graph look (remove gridlines)
facet_grid(Timepoint~MeasureType) + # divide graph by timepoint and measurement type
ylim(0, 1000) + # define axis limit
ylab(expression(paste("Length ", mu, "m"))) + # label y axis
xlab("") + # remove xaxis title
stat_compare_means(comparisons = comparisons, method = "t.test", label.y = c(750, 825, 900, 970), label = "p.signif") + # add statistical test
Seurat:::RotatedAxis() + # rotate xaxis names
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor)) # call fill colors
# filter data for last clutch with correct doses
vmo_022120 <- filter(MOdata, Clutch == "22120")
#factor data to order sample variables correctly
vmo_022120$SampleID <- factor(vmo_022120$SampleID, levels = c("uninjected", "tracer", "meis1_VMO", "pbx3_VMO"))
# define comparisons for statistics
comparisons <- list(c("uninjected", "tracer"),c("uninjected", "meis1_VMO"),c("uninjected", "pbx3_VMO"),c("tracer", "meis1_VMO"), c("tracer", "pbx3_VMO")) # define comparisons for statistics
# for publication
ggplot(vmo_022120, aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_boxplot() +
geom_jitter() +
theme_bw(base_size = 20) +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black")) +
facet_grid(Timepoint~MeasureType) +
ylab(expression(paste("Length ", mu, "m"))) +
xlab("") +
stat_compare_means(comparisons = comparisons, method = "t.test", label = "p.signif") +
Seurat:::RotatedAxis() +
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor))
# for talk figure
ggplot(vmo_022120, aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_boxplot() +
geom_jitter() +
theme_dark(base_size = 20) +
ylab(label = expression(paste("Length ", mu, "m"))) +
xlab("") +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "white"), axis.text.y = element_text(colour = "white"), axis.title.y = element_text(colour = "white"), plot.background = element_rect(fill = "black")) +
facet_grid(MeasureType~Timepoint) +
stat_compare_means(comparisons = comparisons, method = "t.test", label = "p.signif") +
Seurat:::RotatedAxis() +
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor))
# for publication
ggplot(vmo_022120, aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_boxplot() +
geom_jitter() +
theme_bw(base_size = 20) +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black")) +
facet_grid(.~MeasureType) +
ylab(expression(paste("Length ", mu, "m"))) +
xlab("") +
stat_compare_means(comparisons = comparisons, method = "t.test", label = "p.signif") +
Seurat:::RotatedAxis() +
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor))
# for publication
p1 <- ggplot(subset(vmo_022120, MeasureType == "Tail"), aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_boxplot() +
geom_jitter() +
theme_bw(base_size = 20) +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black")) +
ylab(expression(paste("Length ", mu, "m"))) +
xlab("") +
stat_compare_means(comparisons = comparisons, method = "t.test", label = "p.signif") +
Seurat:::RotatedAxis() +
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor))
p1
# for publication
p1 <- ggplot(subset(vmo_022120, MeasureType == "Tail"), aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_boxplot() +
geom_jitter() +
theme_bw(base_size = 20) +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black")) +
ylab(expression(paste("Length ", mu, "m"))) +
xlab("") +
ggtitle("Tail Length") +
stat_compare_means(comparisons = comparisons, method = "t.test", label = "p.signif") +
Seurat:::RotatedAxis() +
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor))
p2 <- ggplot(subset(vmo_022120, MeasureType == "Spinal Cord"), aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_boxplot() +
geom_jitter() +
theme_bw(base_size = 20) +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black")) +
ylab(expression(paste("Length ", mu, "m"))) +
xlab("") +
ggtitle("Spinal Cord Length") +
stat_compare_means(comparisons = comparisons, method = "t.test", label = "p.signif") +
Seurat:::RotatedAxis() +
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor))
# https://patchwork.data-imaginist.com/
library(patchwork)
library(patchwork)
p1|p2
# for publication
p1 <- ggplot(vmo_022120, aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_boxplot() +
geom_jitter() +
theme_bw(base_size = 20) +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black")) +
ylab(expression(paste("Length ", mu, "m"))) +
xlab("") +
facet_grid(MeasureType~.)
# for publication
p1 <- ggplot(vmo_022120, aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_boxplot() +
geom_jitter() +
theme_bw(base_size = 20) +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black")) +
ylab(expression(paste("Length ", mu, "m"))) +
xlab("") +
facet_grid(MeasureType~.)+
stat_compare_means(comparisons = comparisons, method = "t.test", label = "p.signif") +
Seurat:::RotatedAxis() +
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor))
# for publication
ggplot(vmo_022120, aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_boxplot() +
geom_jitter() +
theme_bw(base_size = 20) +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black")) +
ylab(expression(paste("Length ", mu, "m"))) +
xlab("") +
facet_grid(MeasureType~.)+
stat_compare_means(comparisons = comparisons, method = "t.test", label = "p.signif") +
Seurat:::RotatedAxis() +
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor))
# for publication
ggplot(vmo_022120, aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_boxplot() +
geom_jitter() +
theme_bw(base_size = 20) +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black")) +
ylab(expression(paste("Length ", mu, "m"))) +
xlab("") +
facet_grid(.~MeasureType)+
stat_compare_means(comparisons = comparisons, method = "t.test", label = "p.signif") +
Seurat:::RotatedAxis() +
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor))
# for publication
ggplot(vmo_022120, aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_boxplot() +
geom_jitter() +
theme_bw(base_size = 20) +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black")) +
ylab(expression(paste("Length ", mu, "m"))) +
xlab("") +
facet_grid(MeasureType)+
stat_compare_means(comparisons = comparisons, method = "t.test", label = "p.signif") +
Seurat:::RotatedAxis() +
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor))
# for publication
ggplot(vmo_022120, aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_boxplot() +
geom_jitter() +
theme_bw(base_size = 20) +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black")) +
ylab(expression(paste("Length ", mu, "m"))) +
xlab("") +
facet_wrap(MeasureType)+
stat_compare_means(comparisons = comparisons, method = "t.test", label = "p.signif") +
Seurat:::RotatedAxis() +
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor))
# for publication
ggplot(vmo_022120, aes(x=SampleID, y=Measurement, fill=SampleID)) +
geom_boxplot() +
geom_jitter() +
theme_bw(base_size = 20) +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black")) +
ylab(expression(paste("Length ", mu, "m"))) +
xlab("") +
facet_wrap("MeasureType")+
stat_compare_means(comparisons = comparisons, method = "t.test", label = "p.signif") +
Seurat:::RotatedAxis() +
scale_fill_manual(values = c("white",meisColor, meisColor, pbxColor, pbxColor))
