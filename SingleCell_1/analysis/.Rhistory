dot <- (DotPlot(pax.neural, features=testc([1:30,8], "cdh2"), cols = c("green", "purple")))$data
ggplot(dot, aes(x=id, y=features.plot)) +
geom_point(aes(size=pct.exp, color=avg.exp.scaled)) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), text = element_text(colour = "black", size = 20), axis.text.x = element_text(color="black"), axis.text.y = element_text(color="black"))+
scale_color_gradient2(low = "yellow", mid = "green", high = "purple", limits=c(-1.5,1.5))+
xlab("") +
ylab("") +
Seurat:::RotatedAxis()
FindGene(pax.neural, "cdh2")
dot <- (DotPlot(pax.neural, features=c(test[1:30,8], "cdh2"), cols = c("green", "purple")))$data
ggplot(dot, aes(x=id, y=features.plot)) +
geom_point(aes(size=pct.exp, color=avg.exp.scaled)) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), text = element_text(colour = "black", size = 20), axis.text.x = element_text(color="black"), axis.text.y = element_text(color="black"))+
scale_color_gradient2(low = "yellow", mid = "green", high = "purple", limits=c(-1.5,1.5))+
xlab("") +
ylab("") +
Seurat:::RotatedAxis()
# Save out table
write.table(deneuron, "outs/DEneurons.celltype.txt", sep = "\t", col.names = NA)
# get markers
# read in marker table
DEClusters.neural <- read.table("~/Desktop/pax6 paper/Final Markdowns/SingleCell_1/analysis/outs/DEClusters.neural.txt", sep = "\t", header =TRUE, row.names = 1)
# reassign class of genes to factors
DEClusters.neural$gene <- as.character(DEClusters.neural$gene)
DEClusters.neural$deltapct <- DEClusters.neural$pct.1- DEClusters.neural$pct.2
DEClusters.neural <- filter(DEClusters.neural, deltapct >0.5)
# inspect table
datatable(DEClusters.neural)
markers_top <- as.data.frame(DEClusters.neural %>%
group_by(cluster) %>%
top_n(n = 3, wt=deltapct))
markers <- markers_top$gene
dot <- (DotPlot(pax.neural, features=c("sox2", "neurog1", "nefl", markers, "lepr"), cols = c("green", "purple")))$data
ggplot(dot, aes(x=id, y=features.plot)) +
geom_point(aes(size=pct.exp, color=avg.exp.scaled)) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), text = element_text(colour = "black", size = 20), axis.text.x = element_text(color="black"), axis.text.y = element_text(color="black"))+
scale_color_gradient2(low = "yellow", mid = "green", high = "purple", limits=c(-2.5,2.5))+
xlab("") +
ylab("") +
Seurat:::RotatedAxis()
# set ident
Idents(pax.neural) <- "Laevis"
# get markers
# read in marker table
DEClusters.neural <- read.table("~/Desktop/pax6 paper/Final Markdowns/SingleCell_1/analysis/outs/DEClusters.neural.txt", sep = "\t", header =TRUE, row.names = 1)
# reassign class of genes to factors
DEClusters.neural$gene <- as.character(DEClusters.neural$gene)
DEClusters.neural$deltapct <- DEClusters.neural$pct.1- DEClusters.neural$pct.2
DEClusters.neural <- filter(DEClusters.neural, deltapct >0.5)
# inspect table
datatable(DEClusters.neural)
markers_top <- as.data.frame(DEClusters.neural %>%
group_by(cluster) %>%
top_n(n = 3, wt=deltapct))
markers <- markers_top$gene
# plot dotplot
dot <- (DotPlot(pax.neural, features=c("sox2", "neurog1", "nefl", markers, "lepr"), cols = c("green", "purple")))$data
ggplot(dot, aes(x=id, y=features.plot)) +
geom_point(aes(size=pct.exp, color=avg.exp.scaled)) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), text = element_text(colour = "black", size = 20), axis.text.x = element_text(color="black"), axis.text.y = element_text(color="black"))+
scale_color_gradient2(low = "yellow", mid = "green", high = "purple", limits=c(-2.5,2.5))+
xlab("") +
ylab("") +
Seurat:::RotatedAxis()
min(dot$avg.exp.scaled)
max(dot$avg.exp.scaled)
dot <- (DotPlot(pax.neural, features=c( markers, "lepr"), cols = c("green", "purple")))$data
ggplot(dot, aes(x=id, y=features.plot)) +
geom_point(aes(size=pct.exp, color=avg.exp.scaled)) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), text = element_text(colour = "black", size = 20), axis.text.x = element_text(color="black"), axis.text.y = element_text(color="black"))+
scale_color_gradient2(low = "yellow", mid = "green", high = "purple", limits=c(-2.5,2.5))+
xlab("") +
ylab("") +
Seurat:::RotatedAxis()
ggplot(dot, aes(x=id, y=features.plot)) +
geom_point(aes(size=pct.exp, color=avg.exp.scaled)) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), text = element_text(colour = "black", size = 20), axis.text.x = element_text(color="black"), axis.text.y = element_text(color="black"))+
scale_color_gradient2(low = "yellow", mid = "green", high = "purple", limits=c(-2.5,2.5))+
xlab("") +
ylab("") +
Seurat:::RotatedAxis() +
Seurat:::NoLegend()
ggplot(dot, aes(x=id, y=features.plot)) +
geom_point(aes(size=pct.exp, color=avg.exp.scaled)) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), text = element_text(colour = "black", size = 20), axis.text.x = element_text(color="black"), axis.text.y = element_text(color="black"))+
scale_color_gradient2(low = "yellow", mid = "green", high = "purple", limits=c(-2.5,2.5))+
xlab("") +
ylab("") +
Seurat:::RotatedAxis()
ggplot(dot, aes(x=id, y=features.plot)) +
geom_point(aes(size=pct.exp, color=avg.exp.scaled)) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), text = element_text(colour = "black", size = 20), axis.text.x = element_text(color="black"), axis.text.y = element_text(color="black"))+
scale_color_gradient2(low = "yellow", mid = "green", high = "purple", limits=c(-2.5,2.5))+
xlab("") +
ylab("") +
Seurat:::RotatedAxis() +
NoLegend()
# get markers
# read in marker table
DEClusters.neural <- read.table("~/Desktop/pax6 paper/Final Markdowns/SingleCell/analysis/outs/DEClusters.neural.txt", sep = "\t", header =TRUE, row.names = 1)
# reassign class of genes to factors
DEClusters.neural$gene <- as.character(DEClusters.neural$gene)
markers_top <- as.data.frame(DEClusters.neural %>%
group_by(cluster) %>%
top_n(n = 3, wt=p_val_adj))
markers <- markers_top$gene
dot <- (DotPlot(pax.neural, features=c( markers, "lepr"), cols = c("green", "purple")))$data
ggplot(dot, aes(x=id, y=features.plot)) +
geom_point(aes(size=pct.exp, color=avg.exp.scaled)) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), text = element_text(colour = "black", size = 20), axis.text.x = element_text(color="black"), axis.text.y = element_text(color="black"))+
scale_color_gradient2(low = "yellow", mid = "green", high = "purple", limits=c(-2.5,2.5))+
xlab("") +
ylab("") +
Seurat:::RotatedAxis() +
NoLegend()
min(dot$avg.exp.scaled)
max(dot$avg.exp.scaled)
ggplot(dot, aes(x=id, y=features.plot)) +
geom_point(aes(size=pct.exp, color=avg.exp.scaled)) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), text = element_text(colour = "black", size = 20), axis.text.x = element_text(color="black"), axis.text.y = element_text(color="black"))+
scale_color_gradient2(low = "yellow", mid = "green", high = "purple", limits=c(-2.5,2.5))+
xlab("") +
ylab("") +
Seurat:::RotatedAxis()
# get markers
# read in marker table
DEClusters.neural <- read.table("~/Desktop/pax6 paper/Final Markdowns/SingleCell_1/analysis/outs/DEClusters.neural.txt", sep = "\t", header =TRUE, row.names = 1)
# reassign class of genes to factors
DEClusters.neural$gene <- as.character(DEClusters.neural$gene)
DEClusters.neural$deltapct <- DEClusters.neural$pct.1- DEClusters.neural$pct.2
DEClusters.neural <- filter(DEClusters.neural, deltapct >0.5)
# inspect table
datatable(DEClusters.neural)
markers_top <- as.data.frame(DEClusters.neural %>%
group_by(cluster) %>%
top_n(n = 3, wt=p_val_adj))
markers <- markers_top$gene
dot <- (DotPlot(pax.neural, features=c( markers, "lepr"), cols = c("green", "purple")))$data
ggplot(dot, aes(x=id, y=features.plot)) +
geom_point(aes(size=pct.exp, color=avg.exp.scaled)) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), text = element_text(colour = "black", size = 20), axis.text.x = element_text(color="black"), axis.text.y = element_text(color="black"))+
scale_color_gradient2(low = "yellow", mid = "green", high = "purple", limits=c(-2.5,2.5))+
xlab("") +
ylab("") +
Seurat:::RotatedAxis()
dot <- (DotPlot(pax.neural, features=c( markers, "lepr"), cols = c("green", "purple")))$data
dot <- (DotPlot(pax.neural, features=c( markers), cols = c("green", "purple")))$data
dot <- (DotPlot(pax.neural, features=unique(c( markers, "lepr")), cols = c("green", "purple")))$data
ggplot(dot, aes(x=id, y=features.plot)) +
geom_point(aes(size=pct.exp, color=avg.exp.scaled)) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), text = element_text(colour = "black", size = 20), axis.text.x = element_text(color="black"), axis.text.y = element_text(color="black"))+
scale_color_gradient2(low = "yellow", mid = "green", high = "purple", limits=c(-2.5,2.5))+
xlab("") +
ylab("") +
Seurat:::RotatedAxis()
FeaturePlot(pax.neural, c("nsg1", "nsg2"), cols = c("yellow", "green", "purple"))
DimPlot(pax.neural, label = TRUE)
# change idents of suerat object
Idents(pax.neural) <- pax.neural$Laevis
# plot wit hseurat umap
DimPlot(pax.neural, cols = my.color.neural) + NoAxes() + NoLegend()
# Set colors
my.color.neural <- c("#2CB11B", #
"#F73BEE", #
"#E9E4A6", #
"#DFCEE0" , #
"#E9A17C", #
"#1BB6AF" , #
"#172869" , #
"#FF3200") #
#2CB11B
FeaturePlot(subset(pax.neural, cluster == "Floor Plate"))
DimPlot(subset(pax.neural, cluster == "Floor Plate"), cols = my.color.neural[1])
DimPlot(subset(pax.neural, Laevis == "Floor Plate"), cols = my.color.neural[1])
DimPlot(subset(pax.neural, Laevis == "Floor Plate"), cols = my.color.neural[2])
DimPlot(subset(pax.neural, Laevis == "Floor Plate"), cols = my.color.neural[2])
DimPlot(subset(pax.neural, Laevis == "Floor Plate"), cols = my.color.neural[3])
DimPlot(subset(pax.neural, Laevis == "Floor Plate"), cols = my.color.neural[4])
DimPlot(subset(pax.neural, Laevis == "Floor Plate"), cols = my.color.neural[5])
DimPlot(subset(pax.neural, Laevis == "Floor Plate"), cols = my.color.neural[6])
DimPlot(subset(pax.neural, Laevis == "Floor Plate"), cols = my.color.neural[7])
DimPlot(subset(pax.neural, Laevis == "Floor Plate"), cols = my.color.neural[8])
DimPlot(pax.neural, cols = my.color.neural)
# Set colors
my.color.neural <- c("#2CB11B", # NPC
"#F73BEE", # Floor plate
"#E9E4A6", # DiffN
"#DFCEE0" , # IN
"#E9A17C", # VMN
"#FF3200", # MN
"#172869" , # MNL
"#1BB6AF" ) # DN
DimPlot(pax.neural, cols = my.color.neural)
# change idents of suerat object
Idents(pax.neural) <- pax.neural$Laevis
# plot wit hseurat umap
DimPlot(pax.neural, cols = my.color.neural) + NoAxes() + NoLegend()
# change idents of suerat object
Idents(pax.neural) <- pax.neural$condition
DimPlot(pax.neural, cols = rev(condition.color)) + NoAxes() + NoLegend()
# set ident
Idents(pax.neural) <- "Laevis"
# get markers
# read in marker table
DEClusters.neural <- read.table("~/Desktop/pax6 paper/Final Markdowns/SingleCell_1/analysis/outs/DEClusters.neural.txt", sep = "\t", header =TRUE, row.names = 1)
Idents(object = pax.neural) <- "threestate_condition_cell"
# Get number of cells in each cluster for each condition into data frame
nCells.neural <- as.data.frame(table(pax.neural@active.ident))
# Make condition and cluster columns
nCells.neural$cluster <- gsub(nCells.neural$Var1, pattern = ".*__", replacement = "")
nCells.neural$condition <- gsub(nCells.neural$Var1, pattern = "__.*", replacement = "")
nCells.neural$condition <- gsub(nCells.neural$condition, pattern = "_.*", replacement = "")
nCells.neural$class <- gsub(nCells.neural$Var1, pattern = "__.*", replacement = "")
nCells.neural$class <- gsub(nCells.neural$class, pattern = ".*_", replacement = "")
nCells.neural <- nCells.neural[order(nCells.neural$condition),]
# get total numner of cells for each condition
totals <-as.data.frame(nCells.neural %>%
group_by(condition) %>%
summarise(totals = sum(Freq)))
totals$totals <- as.numeric(totals$totals)
# Make ratio columns in new table expressing percent cluster of all neural cells
nCells.neural <- merge.data.frame(nCells.neural, totals, by = "condition")
nCells.neural$percent <- nCells.neural$Freq/nCells.neural$totals*100
# mutate for sunburst
nCells.neural <- nCells.neural %>% mutate(id = seq(class))
# factor table
nCells.neural$condition <- factor(nCells.neural$condition, levels = c("uninj", "regenerate"))
nCells.neural$cluster <- factor(nCells.neural$cluster, levels = c("Spinal Cord Progenitor","Floor Plate", "Differentiating Neuron", "Interneurons", "Vulnerable Motor Neuron", "Dopaminergic Neurons", "Motor Neuron (leptin+)", "Motor Neuron"))
nCells.neural$class <- factor(nCells.neural$class, levels = c("NSC", "Differentiating", "Neuron"))
# color for sunburst
my.color.neural.sun <- c("grey", "#E9E4A6", "#1BB6AF", "#F73BEE", "#DFCEE0" , "#FF3200", "#172869" , "black", "white","#2CB11B", "#E9A17C")
plot.table.1 <- filter(nCells.neural, condition == "uninj")
p1 <- ggplot(plot.table.1, aes(y = percent, group=class)) +
geom_col(aes(fill = class, x = 0), width = .4, color="black") +
geom_col(aes(fill = cluster, x = .25), width = .1, color="black") +
coord_polar(theta = 'y') +
blank_theme +
scale_fill_manual(values = my.color.neural.sun) +
theme(legend.position = "none", axis.text = element_text(colour = "white"))
plot.table.2 <- filter(nCells.neural, condition == "regenerate")
p2 <- ggplot(plot.table.2, aes(y = percent, group = class)) +
geom_col(aes(fill = class, x = 0), width = .4, color="black") +
geom_col(aes(fill = cluster, x = .25), width = .1, color="black") +
coord_polar(theta = 'y') +
blank_theme +
scale_fill_manual(values = my.color.neural.sun) +
theme(legend.position = "none", axis.text = element_text(colour = "white"))
plot_grid(p1, p2, ncol = 2, labels = c("uninjured", "24hpa"))
# umap plot of cell types faceted by condition
ggplot(filter(pax.neural.plotting, condition %in% c("uninj", "regenerate")), aes(x=UMAP_1, y=UMAP_2, color=Laevis))+
geom_point(stat="identity") +
scale_color_manual(values = my.color.neural) +
facet_grid(.~condition) +
blank_theme +
theme(legend.position = "right", axis.text = element_text(colour = "white")) + Seurat:::NoLegend()
# read in plotting data
pax.neural.plotting<- read.table("~/Desktop/pax6 paper/Final Markdowns/SingleCell/UMAP/pax.neural_metadata.txt", sep = "\t")
# umap plot of cell types faceted by condition
ggplot(filter(pax.neural.plotting, condition %in% c("uninj", "regenerate")), aes(x=UMAP_1, y=UMAP_2, color=Laevis))+
geom_point(stat="identity") +
scale_color_manual(values = my.color.neural) +
facet_grid(.~condition) +
blank_theme +
theme(legend.position = "right", axis.text = element_text(colour = "white")) + Seurat:::NoLegend()
# umap plot of cell types faceted by condition
ggplot(filter(pax.neural.plotting, condition %in% c("uninj", "regenerate")), aes(x=UMAP_1, y=UMAP_2, color=Laevis))+
geom_point(stat="identity") +
scale_color_manual(values = my.color.neural) +
facet_grid(.~condition) +
blank_theme +
theme(legend.position = "right", axis.text = element_text(colour = "white")) + Seurat:::NoLegend()
# umap plot of cell types faceted by condition
ggplot(pax.neural.plotting, aes(x=UMAP_1, y=UMAP_2, color=Laevis))+
geom_point(stat="identity") +
scale_color_manual(values = my.color.neural) +
facet_grid(.~condition) +
blank_theme +
theme(legend.position = "right", axis.text = element_text(colour = "white")) + Seurat:::NoLegend()
# read in plotting data
pax.neural.plotting<- read.table("~/Desktop/pax6 paper/Final Markdowns/SingleCell_1/UMAP/pax.neural_metadata.txt", sep = "\t")
# umap plot of cell types faceted by condition
ggplot(filter(pax.neural.plotting, condition %in% c("uninj", "regenerate")), aes(x=UMAP_1, y=UMAP_2, color=Phase))+
geom_point(stat="identity") +
scale_color_manual(values = cc_colors) +
facet_grid(.~condition) +
blank_theme +
theme(legend.position = "right", axis.text = element_text(colour = "white"))
# umap plot of cell types faceted by condition
ggplot(pax.neural.plotting, aes(x=UMAP_1, y=UMAP_2, color=Laevis))+
geom_point(stat="identity") +
scale_color_manual(values = my.color.neural) +
facet_grid(.~condition) +
blank_theme +
theme(legend.position = "right", axis.text = element_text(colour = "white")) + Seurat:::NoLegend()
# umap plot of cell types faceted by condition
ggplot(pax.neural.plotting, aes(x=UMAP_1, y=UMAP_2, color=my.color.neural))+
geom_point(stat="identity") +
scale_color_manual(values = my.color.neural) +
facet_grid(.~condition) +
blank_theme +
theme(legend.position = "right", axis.text = element_text(colour = "white")) + Seurat:::NoLegend()
DimPlot(subset(pax.neural, condition == "uninj"), cols = my.color.neural) + NoAxes( + NoLegend())
DimPlot(subset(pax.neural, condition == "uninj"), cols = my.color.neural) + NoAxes( + NoLegend()
DimPlot(subset(pax.neural, condition == "uninj"), cols = my.color.neural) + NoAxes() + NoLegend()
DimPlot(subset(pax.neural, condition == "uninj"), cols = my.color.neural) + NoAxes() + NoLegend()
# plot wit hseurat umap
DimPlot(pax.neural, cols = my.color.neural) + NoAxes() + NoLegend()
# plot wit hseurat umap
DimPlot(pax.neural, cols = my.color.neural) + NoAxes() + NoLegend()
# change idents of suerat object
Idents(pax.neural) <- pax.neural$Laevis
# plot wit hseurat umap
DimPlot(pax.neural, cols = my.color.neural) + NoAxes() + NoLegend()
DimPlot(pax.neural, cols = my.color.neural, split.by = "condition") + NoAxes() + NoLegend()
DimPlot(pax.neural, cols = my.color.neural, split.by = "condition", nrow=2) + NoAxes() + NoLegend()
DimPlot(pax.neural, cols = my.color.neural, split.by = "condition") + NoAxes() + NoLegend() + facet_grid(nrow=2)
plot_grid(p1, p2, ncol = 2, labels = c("uninjured", "24hpa"))
Idents(object = pax.neural) <- "threestate_condition_cell"
# Get number of cells in each cluster for each condition into data frame
nCells.neural <- as.data.frame(table(pax.neural@active.ident))
# Make condition and cluster columns
nCells.neural$cluster <- gsub(nCells.neural$Var1, pattern = ".*__", replacement = "")
nCells.neural$condition <- gsub(nCells.neural$Var1, pattern = "__.*", replacement = "")
nCells.neural$condition <- gsub(nCells.neural$condition, pattern = "_.*", replacement = "")
nCells.neural$class <- gsub(nCells.neural$Var1, pattern = "__.*", replacement = "")
nCells.neural$class <- gsub(nCells.neural$class, pattern = ".*_", replacement = "")
nCells.neural <- nCells.neural[order(nCells.neural$condition),]
# get total numner of cells for each condition
totals <-as.data.frame(nCells.neural %>%
group_by(condition) %>%
summarise(totals = sum(Freq)))
totals$totals <- as.numeric(totals$totals)
# Make ratio columns in new table expressing percent cluster of all neural cells
nCells.neural <- merge.data.frame(nCells.neural, totals, by = "condition")
nCells.neural$percent <- nCells.neural$Freq/nCells.neural$totals*100
# mutate for sunburst
nCells.neural <- nCells.neural %>% mutate(id = seq(class))
# factor table
nCells.neural$condition <- factor(nCells.neural$condition, levels = c("uninj", "regenerate"))
nCells.neural$cluster <- factor(nCells.neural$cluster, levels = c("Spinal Cord Progenitor","Floor Plate", "Differentiating Neuron", "Interneurons", "Vulnerable Motor Neuron", "Dopaminergic Neurons", "Motor Neuron (leptin+)", "Motor Neuron"))
nCells.neural$class <- factor(nCells.neural$class, levels = c("NSC", "Differentiating", "Neuron"))
# color for sunburst
my.color.neural.sun <- c("grey", "#E9E4A6", "#1BB6AF", "#F73BEE", "#DFCEE0" , "#FF3200", "#172869" , "black", "white","#2CB11B", "#E9A17C")
plot.table.1 <- filter(nCells.neural, condition == "uninj")
p1 <- ggplot(plot.table.1, aes(y = percent, group=class)) +
geom_col(aes(fill = class, x = 0), width = .4, color="black") +
geom_col(aes(fill = cluster, x = .25), width = .1, color="black") +
coord_polar(theta = 'y') +
blank_theme +
scale_fill_manual(values = my.color.neural.sun) +
theme(legend.position = "none", axis.text = element_text(colour = "white"))
plot.table.2 <- filter(nCells.neural, condition == "regenerate")
p2 <- ggplot(plot.table.2, aes(y = percent, group = class)) +
geom_col(aes(fill = class, x = 0), width = .4, color="black") +
geom_col(aes(fill = cluster, x = .25), width = .1, color="black") +
coord_polar(theta = 'y') +
blank_theme +
scale_fill_manual(values = my.color.neural.sun) +
theme(legend.position = "none", axis.text = element_text(colour = "white"))
plot_grid(p1, p2, ncol = 2, labels = c("uninjured", "24hpa"))
Idents(pax.neural) <- "Phase"
Idents(pax.neural)
DimPlot(pax.neural, split.by = "condition") + NoAxes()
DimPlot(pax.neural, split.by = "condition", cols = cc_colors) + NoAxes()
DimPlot(pax.neural, cols = my.color.neural, split.by = "condition") + NoAxes()
Idents(pax.neural) <- 'Laevis
Idents(pax.neural) <- 'Laevis'
Idents(pax.neural) <- 'Laevis'
DimPlot(pax.neural, cols = my.color.neural, split.by = "condition") + NoAxes()
# get data from seurat for violin plot
vlndata <- FetchData(pax.neural, c("ident", "Laevis", "mock_24", "pbx3", "meis1"))
# get data from seurat for violin plot
vlndata <- FetchData(pax.neural, c("ident", "Laevis", "pbx3", "meis1"))
plot_grid(pm, pp, nrow = 2)
### 2 violin
pm <- ggplot(vlndata, aes(x=Laevis, y=meis1, fill=mock_24)) +
geom_violin() +
geom_jitter(size=0.2) +
theme_bw(base_size = 20) +
scale_fill_manual(values = c("#c51b8a","#B574A7")) +
xlab("")+
ylab("meis1 expression")+
theme(legend.position = "none", axis.text = element_text(colour = "black"), axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(), strip.background = element_blank(), strip.text = element_blank())
pp <- ggplot(vlndata, aes(x=Laevis, y=pbx3, fill=mock_24)) +
geom_violin() +
geom_jitter(size=0.2) +
theme_bw(base_size = 20) +
scale_fill_manual(values =  c("#e6550d", "#FBB58F")) +
xlab("")+
ylab("pbx3 expression")+
theme(legend.position = "none", axis.text = element_text(colour = "black"), axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(), strip.background = element_blank(), strip.text = element_blank())
plot_grid(pm, pp, nrow = 2)
### split violin
pp <- ggplot(vlndata, aes(x=Laevis, y=pbx3)) +
geom_split_violin() +
geom_jitter(size=0.2) +
theme_bw(base_size = 20) +
scale_fill_manual(values =  c("#e6550d", "#FBB58F")) +
xlab("")+
ylab("pbx3 expression")+
theme(legend.position = "none", axis.text = element_text(colour = "black"), axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(), strip.background = element_blank(), strip.text = element_blank())
pm <- ggplot(vlndata, aes(x=Laevis, y=meis1, fill=mock_24)) +
geom_split_violin() +
geom_jitter(size=0.2) +
theme_bw(base_size = 20) +
scale_fill_manual(values = c("#c51b8a","#B574A7")) +
xlab("")+
ylab("meis1 expression")+
theme(legend.position = "none", axis.text = element_text(colour = "black"), axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(), strip.background = element_blank(), strip.text = element_blank())
pm <- ggplot(vlndata, aes(x=Laevis, y=meis1)) +
geom_split_violin() +
geom_jitter(size=0.2) +
theme_bw(base_size = 20) +
scale_fill_manual(values = c("#c51b8a","#B574A7")) +
xlab("")+
ylab("meis1 expression")+
theme(legend.position = "none", axis.text = element_text(colour = "black"), axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(), strip.background = element_blank(), strip.text = element_blank())
plot_grid(pm, pp, nrow = 2)
# change idents of suerat object
Idents(pax.neural) <- pax.neural$condition
DimPlot(pax.neural, cols = rev(condition.color)) + NoAxes() + NoLegend()
condition.color <- c( "#6F0909", # 24hpa
"#C0C0C0") # uninj
condition.color
levels(pax.neural$condition)
pax.neural$condition
pax.neural$condition <- factor(pax.neural$condition, levels = c("uninj", "regenerate"))
# change idents of suerat object
Idents(pax.neural) <- pax.neural$condition
DimPlot(pax.neural, cols = rev(condition.color)) + NoAxes() + NoLegend()
DimPlot(pax.neural, cols = rev(condition.color)) + NoAxes()
# set ident
Idents(pax.neural) <- "Laevis"
# get markers
# read in marker table
DEClusters.neural <- read.table("~/Desktop/pax6 paper/Final Markdowns/SingleCell_1/analysis/outs/DEClusters.neural.txt", sep = "\t", header =TRUE, row.names = 1)
# reassign class of genes to factors
DEClusters.neural$gene <- as.character(DEClusters.neural$gene)
DEClusters.neural$deltapct <- DEClusters.neural$pct.1- DEClusters.neural$pct.2
DEClusters.neural <- filter(DEClusters.neural, deltapct >0.5)
markers_top <- as.data.frame(DEClusters.neural %>%
group_by(cluster) %>%
top_n(n = 3, wt=p_val_adj))
markers <- markers_top$gene
dot <- (DotPlot(pax.neural, features=unique(c( markers, "lepr")), cols = c("green", "purple")))$data
dot <- (DotPlot(pax.neural, features=unique(c( markers, "lepr")), cols = c("green", "purple")))$data
ggplot(dot, aes(x=id, y=features.plot)) +
geom_point(aes(size=pct.exp, color=avg.exp.scaled)) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), text = element_text(colour = "black", size = 20), axis.text.x = element_text(color="black"), axis.text.y = element_text(color="black"))+
scale_color_gradient2(low = "yellow", mid = "green", high = "purple", limits=c(-2.5,2.5))+
xlab("") +
ylab("") +
Seurat:::RotatedAxis()
markers_top <- as.data.frame(DEClusters.neural %>%
group_by(cluster) %>%
top_n(n = 3, wt=deltapct))
markers <- markers_top$gene
dot <- (DotPlot(pax.neural, features=unique(c( markers, "lepr")), cols = c("green", "purple")))$data
ggplot(dot, aes(x=id, y=features.plot)) +
geom_point(aes(size=pct.exp, color=avg.exp.scaled)) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), text = element_text(colour = "black", size = 20), axis.text.x = element_text(color="black"), axis.text.y = element_text(color="black"))+
scale_color_gradient2(low = "yellow", mid = "green", high = "purple", limits=c(-2.5,2.5))+
xlab("") +
ylab("") +
Seurat:::RotatedAxis()
Idents(pax.neural) <- pax.neural$Laevis
neuralgenes <- c("mbp", "lepr", "lep", "foxa1", "foxa2", "tph1", "th", "gata3", "gata2", "tubb3", "mmp17", "mmp15", "tlx3", "tlx1", "pou4f1", "vsx2", "chat", "isl1", "mnx1", "lhx1", "pax2", "evx2", "evx1", "neurod4", "neurod1", "ascl1", "olig2", "dbx1", "irx3", "nkx6-1", "pax6", "nkx6-2", "arx")
DefaultAssay(pax.neural) <- "RNA"
dot <- (DotPlot(pax.neural, features=neuralgenes))$data
max(dot$avg.exp.scaled)
min(dot$avg.exp.scaled)
ggplot(dot, aes(x=features.plot, y=id)) +
geom_point(aes(size=pct.exp, color=avg.exp.scaled)) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), text = element_text(colour = "black", size = 30), axis.text.x = element_text(color="black"), axis.text.y = element_text(color="black"))+
scale_color_gradient2(low = "gold", mid = "green", high = "purple", limits = c(-1.5, 2.5)) +
xlab("") +
ylab("") +
Seurat:::RotatedAxis() +
Seurat:::NoLegend()
ggplot(dot, aes(x=features.plot, y=id)) +
geom_point(aes(size=pct.exp, color=avg.exp.scaled)) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), text = element_text(colour = "black", size = 30), axis.text.x = element_text(color="black"), axis.text.y = element_text(color="black"))+
scale_color_gradient2(low = "gold", mid = "green", high = "purple", limits = c(-1.5, 2.5)) +
xlab("") +
ylab("") +
Seurat:::RotatedAxis()
